@using SFA.DAS.FAT.Domain.Configuration
@using SFA.DAS.FAT.Web.Infrastructure
@using Microsoft.Extensions.Options
@using SFA.DAS.FAT.Web.Models.CourseProviders
@using SFA.DAS.FAT.Web.Models.Shared
@model SFA.DAS.FAT.Web.Models.CourseProviders.CourseProvidersViewModel
@inject IOptions<FindApprenticeshipTrainingWeb> ConfigOptions;

@{
    ViewData["Title"] = $"Training providers for {Model.CourseTitleAndLevel}";
    ViewData["Description"] = $"Compare training providers who offer apprenticeship training for {Model.CourseTitleAndLevel}. You can check their available training options, employer reviews and pass rates.";
}
<main class="govuk-main-wrapper" id="main-content">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-xl govuk-!-margin-bottom-5">
                <span>Training providers for</span>
                <span>@Model.CourseTitleAndLevel</span>
            </h1>
            @if (Model.Providers.Count > 0)
            {
                <p class="govuk-body-l  govuk-!-margin-bottom-8">Select the training provider name to view more details.</p>
            }
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-third">
            <form id="course-providers-form" method="GET">
                <input type="hidden" name="OrderBy" value="@Model.OrderBy"/>
                @await Html.PartialAsync("_filters", Model.Filters)
            </form>
        </div>
        <div class="govuk-grid-column-two-thirds">
            <form asp-route="@RouteNames.CourseProviders" id="course-providers-order-form" method="GET" class="app-search-results-header">
                @foreach (var q in Context.Request.Query)
                {
                    switch (q.Key.ToLower())
                    {
                        case "orderby":
                            continue;
                        case "location":
                            <input type="hidden" name="@q.Key" value="@q.Value"/>
                            break;
                        default:
                        {
                            var itemValues = q.Value.ToString().Split(",").ToList();

                            foreach (var itemValue in itemValues)
                            {
                                <input type="hidden" name="@q.Key" value="@itemValue"/>
                            }
                            break;
                        }
                    }
                }
                <div class="app-search-results-header__total">
                    <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-0">@Model.TotalMessage</p>
                </div>
                @if (Model.Providers.Count > 0)
                {
                    <div class="app-search-results-header__sort">
                        <div class="app-search-results-sort">
                            <label class="govuk-label app-search-results-sort__label" for="course-providers-orderby">
                                Sort results &nbsp;&nbsp;
                            </label>
                            <select class="govuk-select app-search-results-sort__select" id="course-providers-orderby" name="OrderBy">
                                @foreach (var orderByOption in Model.ProviderOrderOptions)
                                {
                                    <option value="@orderByOption.ProviderOrderBy" selected=@(orderByOption.Selected ? "selected" : null)>@orderByOption.Description</option>
                                }
                            </select>
                        </div>
                    </div>
                }
            </form>
            
            

        @if (Model.Providers.Count == 0)
        {
           
                <p class="govuk-body">
                    There are no training providers that match your search.
                </p>
                <p class="govuk-body">
                        You may need to:
                </p>
          
                    <ul class="govuk-list govuk-list--bullet">
                        <li>clear the filters you've selected</li>
                        <li>increase the distance that the apprentice can travel</li>
                    </ul>
             
                <p class="govuk-body">
                    Change your search using the filters on this page or <a asp-route="@RouteNames.SearchCourses" class="govuk-link govuk-link--no-visited-state">start a new search</a>.
                </p>
             
         
        }
        else
        {
            <div class="das-search-results">
                <ol class="das-search-results__list">

                    @foreach (var provider in Model.Providers)
                    {
                        <li>
                            
                            <div class="govuk-summary-card">
                                
                                <div>
                                    @await Html.PartialAsync("_courseProviderTopPanel", new CourseProviderTopPanelViewModel
                                    {
                                        CourseId = Model.Id.ToString(),
                                        ShortlistCount = Model.ShortlistCount,
                                        ProviderName = provider.ProviderName,
                                        ShortlistId = provider.ShortlistId,
                                        Ukprn = provider.Ukprn,
                                        Location = Model.Location,
                                        Distance = Model.Distance
                                    })
                                </div>

                                <div class="govuk-summary-card__content">
                                    <dl class="govuk-summary-list">

                                        <div class="govuk-summary-list__row">
                                            @await Html.PartialAsync("_trainingOptions", provider.TrainingOptionsViewModel)
                                        </div>
                                        <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">
                                                @Model.ProviderReviewsHeading
                                            </dt>
                                            <dd class="govuk-summary-list__value">
                                                @await Html.PartialAsync("_providerRating", new ProviderRatingViewModel
                                                {
                                                    Stars = provider.EmployerStars,
                                                    Reviews = provider.EmployerReviews,
                                                    ProviderRating = provider.EmployerRating,
                                                    ProviderRatingType = ProviderRatingType.Employer
                                                })
                                                @await Html.PartialAsync("_providerRating", new ProviderRatingViewModel
                                                {
                                                    Stars = provider.ApprenticeStars,
                                                    Reviews = provider.ApprenticeReviews,
                                                    ProviderRating = provider.ApprenticeRating,
                                                    ProviderRatingType = ProviderRatingType.Apprentice
                                                })
                                            </dd>
                                        </div>
                                        <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key">@Model.CourseAchievementRateHeading</dt>
                                            <dd class="govuk-summary-list__value">
                                                @provider.AchievementRateMessage
                                            </dd>
                                        </div>
                                    </dl>
                                </div>
                            </div>
                        </li>
                    }
                </ol>
            </div>
        }
            <div class="govuk-!-margin-top-4">
            @await Html.PartialAsync("_pagination", Model.Pagination)
            </div>
       
            <div class="das-highlight">
                <h3 class="govuk-heading-m govuk-!-margin-bottom-2">If you cannot find a suitable training provider</h3>
                <p class="govuk-body">
                    If the training providers listed are not suitable or there are none listed, we can ask training providers if they can run @Model.CourseTitleAndLevel.
                    If a training provider can offer a course, we'll send you their contact details.
                </p>
                <p class="govuk-body">
                    You can use this service if you employ apprentices. You'll need to be signed in to your apprenticeship service account.
                </p>

                <p class="govuk-!-margin-0">
                    <a id="ask-training-providers-run-course" href="@Model.GetHelpFindingCourseUrl(Model.CourseId)" class="govuk-button das-button--blue govuk-!-margin-0">Ask if training providers can run this course</a>
                </p>
            </div>
   
        </div>
    </div>
</main>
