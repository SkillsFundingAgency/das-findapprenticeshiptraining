@using SFA.DAS.FAT.Web.Infrastructure
@using SFA.DAS.FAT.Domain.Extensions
@using SFA.DAS.FAT.Domain.Courses
@using DeliveryModeType = SFA.DAS.FAT.Web.Models.DeliveryModeType
@model SFA.DAS.FAT.Web.Models.CourseProvidersViewModel
@{
    ViewData["Title"] = "Available training providers";
}
<main class="govuk-main-wrapper" id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h1 class="govuk-heading-xl govuk-!-margin-bottom-4">
                <span class="govuk-caption-xl">Training providers for</span>
                @Model.Course.Title <span class="das-no-wrap">(level @Model.Course.Level)</span>
            </h1>
            <p class="govuk-body govuk-!-margin-bottom-8">
                <a class="govuk-link govuk-link--no-visited-state" asp-route="@RouteNames.CourseDetails" asp-route-id="@Model.Course.Id">Overview of @Model.Course.TitleAndLevel</a>
            </p>
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-third">
            <div class="das-show-hide" data-module="das-show-hide">
                <div class="das-filter das-!-show--from-tablet" id="fat-filter">
                    <div class="das-filter__header">
                        <h2 class="das-filter__heading">Filter</h2>
                    </div>
                    @if (Model.ShowFilters)
                    {
                        var routeData = new Dictionary<string, string>
                        {
                            {"location","-1"},
                            {"id",Model.Course.Id.ToString()},
                        };

                <div class="das-filter__selected-filters">
                    <div class="das-filter__selected-header">
                        <h3 class="das-filter__selected-heading">Selected filters</h3>
                        <a class="das-filter__selected-action govuk-link govuk-link--no-visited-state" asp-all-route-data="routeData" asp-route="@RouteNames.CourseProviders">Clear</a>
                    </div>
                    @if (Model.HasLocation)
                    {
                        <h4 class="das-filter__selected-sub-heading">Apprenticeship location</h4>
                        <a asp-querystring="@Model.ClearLocationLink" title="Clear this filter @Model.Location" class="das-filter__tag">@Model.Location</a>
                    }
                    @if (Model.HasDeliveryModes)
                    {
                        <h4 class="das-filter__selected-sub-heading">Training options</h4>
                        @foreach (var deliveryModeLink in Model.ClearDeliveryModeLinks)
                        {
                            <a class="das-filter__tag" asp-querystring="@deliveryModeLink.Value" title="Clear this level filter @deliveryModeLink.Key">@deliveryModeLink.Key</a>
                        }
                    }

                    @if (Model.HasProviderRatings)
                    {
                        <h4 class="das-filter__selected-sub-heading">Average employer review</h4>
                        @foreach (var providerRatingLink in Model.ClearProviderRatingLinks)
                        {
                            <a class="das-filter__tag" asp-querystring="@providerRatingLink.Value" title="Clear this level filter @providerRatingLink.Key">@providerRatingLink.Key</a>
                        }
                    }

                </div>
                    }
                    <div class="das-filter__body das-!-show--from-tablet" id="fat-filter-options">
                        <form method="GET" asp-route="@RouteNames.CourseProviders" asp-route-id="@Model.Course.Id">
                            <button type="submit" class="govuk-button" id="filters-submit">Apply filters</button>
                            <div class="govuk-form-group">
                                <label for="search-location" class="govuk-label"><span class="govuk-!-font-weight-bold govuk-!-font-size-24">Apprenticeship location</span></label>
                                <input type="search" id="search-location" name="location" title="Search" class="govuk-input govuk-!-width-three-quarters" data-submit-on-selection="false" data-default-value="@Model.Location">
                            </div>
                            <div class="govuk-form-group">
                                <fieldset class="govuk-fieldset">
                                    <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                        Average employer review
                                    </legend>
                                    <div class="govuk-checkboxes govuk-checkboxes--small">
                                        @foreach (var providerRating in Model.ProviderRatings.OrderByDescending(c=>(int)c.ProviderRatingType) )
                                        {
                                            <div class="govuk-checkboxes__item">
                                                <input @(providerRating.Selected ? "checked='checked" : "") class="govuk-checkboxes__input" id="providerRating-@providerRating.ProviderRatingType" name="providerRatings" type="checkbox" value="@providerRating.ProviderRatingType" />
                                                <label class="govuk-label govuk-checkboxes__label" for="providerRating-@providerRating.ProviderRatingType ">
                                                    @providerRating.Description
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </fieldset>
                            </div>
                            @if (Model.HasLocation)
                            {
                                <div class="govuk-form-group">
                                    <fieldset class="govuk-fieldset">
                                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                                            Training options
                                        </legend>
                                        <div class="govuk-checkboxes govuk-checkboxes--small">
                                            @foreach (var mode in Model.DeliveryModes)
                                            {
                                                <div class="govuk-checkboxes__item">
                                                    <input @(mode.Selected ? "checked='checked" : "") class="govuk-checkboxes__input" id="deliveryMode-@mode.DeliveryModeType" name="deliveryModes" type="checkbox" value="@mode.DeliveryModeType"/>
                                                    <label class="govuk-label govuk-checkboxes__label" for="deliveryMode-@mode.DeliveryModeType">
                                                        @mode.Description
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </fieldset>
                                </div>
                            }
                        </form>
                    </div>
                </div>
                <button class="govuk-button das-filter__toggle das-show-hide__button das-!-show--mobile" data-aria-controls="fat-filter@(Model.HasLocation ? "-options" : "")" data-button-string="filter @(Model.HasLocation ? " options" : "")" data-focus-id="search-location">Show/hide</button>
            </div>
        </div>
        <div class="govuk-grid-column-two-thirds">
            <div class="das-highlight govuk-!-margin-top-0 govuk-!-margin-bottom-5">
                <h2 class="govuk-heading-m govuk-!-margin-bottom-2">Apprenticeship location</h2>
                @if (Model.HasLocation)
                {
                    <p class="govuk-body govuk-!-margin-bottom-0">
                        <span style="margin-right: 10px">@Model.Location</span>
                        <a asp-querystring="@Model.ClearLocationLink" class="govuk-link govuk-link--no-visited-state" id="lnk-remove-location">Remove&nbsp;location</a>
                    </p>    
                }
                else
                {
                    <p class="govuk-body govuk-!-margin-bottom-2">Show only providers who offer this training for the apprenticeship location.</p>
                    <p class="govuk-body govuk-!-margin-bottom-0" data-module="das-show-hide"><a href="#search-location" class="govuk-link govuk-link--no-visited-state das-show-hide__show-link" data-aria-controls="fat-filter" id="lnk-enter-location" data-focus-id="search-location">Enter&nbsp;location</a></p>
                }
                
            </div>
            <h2 class="govuk-heading-m">@Model.TotalMessage</h2>
            @if (Model.Total > 1 && Model.HasLocation)
            {
                <p class="govuk-body govuk-!-margin-bottom-6">
                Sort by:
                @if (Model.SortOrder == ProviderSortBy.Name)
                {
                    <a id="sort-by-distance" class="govuk-link govuk-link--no-visited-state" asp-querystring="@Model.BuildSortLink()">Distance (nearest first)</a>@:,
                    @:<span class="govuk-!-font-weight-bold">Name</span>
                }
                else
                {
                    @:<span class="govuk-!-font-weight-bold">Distance (nearest first)</span>,
                    <a id="sort-by-name" class="govuk-link govuk-link--no-visited-state" asp-querystring="@Model.BuildSortLink()">Name</a>
                }
                </p>
            }
            else if (Model.Total > 1)
            {
                <p class="govuk-body govuk-!-margin-bottom-6">
                    Sorted by:
                    <span class="govuk-!-font-weight-bold">Name</span>
                </p>
            }
            else if (Model.Total == 0)
            {
                <p class="govuk-body govuk-!-margin-bottom-6">No training providers for the selected filters.</p>
            }

            <hr class="govuk-section-break govuk-section-break--visible">

            <div class="das-search-results">
                <ol class="das-search-results__list">

                @foreach (var provider in Model.Providers)
                {
                    var routeData = new Dictionary<string, string>
                    {
                        {"location",Model.Location},
                        {"id",Model.Course.Id.ToString()},
                        {"providerId",provider.ProviderId.ToString()}
                    };
                    
                    <li class="das-search-results__list-item">
                        <h2 class="govuk-heading-m das-search-results__heading">
                            <a class="das-search-results__link" id="provider-@provider.ProviderId" asp-all-route-data="@routeData"  asp-route="@RouteNames.CourseProviderDetails">
                                @provider.Name
                            </a>
                        </h2>
                   
                        @if (Model.HasLocation)
                        {
                            
                            <ul class="govuk-list das-icon-list govuk-!-font-size-16 govuk-!-margin-0">
                                @foreach (var mode in provider.DeliveryModes)
                                {
                                    <li class="das-icon-list__list-item" id="@provider.ProviderId-@mode.DeliveryModeType">
                                        @if (mode.IsAvailable)
                                        {
                                            <span class="das-icon-list__icon das-icon-list__icon--tick">available</span>
                                        }
                                        else
                                        {
                                            <span class="das-icon-list__icon das-icon-list__icon--cross">not available</span>
                                        }
                                        @mode.DeliveryModeType.GetDescription() @mode.FormattedDistanceInMiles
                                    </li>
                                }
                            </ul>
                            
                        }
                        
                        @if (provider.OverallCohort != null)
                        {
                            <p class="govuk-!-margin-0 govuk-!-margin-top-2 govuk-!-font-size-16">
                                @provider.OverallAchievementRatePercentage pass rate
                                <span class="das-text--muted">(out of @provider.OverallCohort apprentices)</span>
                            </p>
                        }

                        <p class="govuk-!-margin-0 govuk-!-margin-top-2 govuk-!-font-size-16">
                            @if (provider.TotalFeedbackRating != 0)
                            {
                                <span class="das-rating das-rating--@(provider.TotalFeedbackRating > 2 ? "good" : "poor")" role="img" aria-label="Rating: @provider.TotalFeedbackRating out of 4 stars">
                                    <span aria-hidden="true" class="das-rating__icon-star"></span>
                                    <span aria-hidden="true" class="das-rating__icon-star@(provider.TotalFeedbackRating < 2 ? "--empty" : "")"></span>
                                    <span aria-hidden="true" class="das-rating__icon-star@(provider.TotalFeedbackRating < 3 ? "--empty" : "")"></span>
                                    <span aria-hidden="true" class="das-rating__icon-star@(provider.TotalFeedbackRating < 4 ? "--empty" : "")"></span>
                                </span>    
                                <span class="das-rating__label--@(provider.TotalFeedbackRating > 2 ? "good" : "poor")">@provider.TotalFeedbackText.GetDescription()</span>
                            }
                            <span class="das-text--muted">@provider.TotalFeedbackRatingText</span>         
                        </p>
                        
                    </li>
                }
                </ol>
            </div>

        </div>
    </div>
</main>
