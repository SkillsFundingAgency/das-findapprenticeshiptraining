@using SFA.DAS.FAT.Web.Infrastructure
@using SFA.DAS.FAT.Domain.Extensions
@using SFA.DAS.FAT.Domain.Courses
@using DeliveryModeType = SFA.DAS.FAT.Web.Models.DeliveryModeType
@model SFA.DAS.FAT.Web.Models.CourseProviderViewModel
@{
    ViewData["Title"] = "Training provider details";
}
<main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content" role="main">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <span class="govuk-caption-xl">Training provider</span>
            <h1 class="govuk-heading-xl">
                @Model.Provider.Name
            </h1>
            @if (!string.IsNullOrEmpty(Model.Provider.TradingName))
            {
                <p class="govuk-body govuk-!-margin-bottom-1"><span class=" govuk-!-font-weight-bold">Other names:</span></p>
                <span class="govuk-caption-l govuk-!-margin-bottom-4">@Model.Provider.TradingName</span>
            }

            <h2 class="govuk-heading-m govuk-!-margin-bottom-2">Employer reviews</h2>
            <p class="govuk-body-l govuk-!-margin-bottom-4">
                @if (Model.Provider.TotalFeedbackRating != 0)
                {
                    <span class="das-rating das-rating--@(Model.Provider.TotalFeedbackRating > 2 ? "good" : "poor")" role="img" aria-label="Rating: @Model.Provider.TotalFeedbackRating out of 4 stars">
                        <span aria-hidden="true" class="das-rating__icon-star"></span>
                        <span aria-hidden="true" class="das-rating__icon-star@(Model.Provider.TotalFeedbackRating < 2 ? "--empty" : "")"></span>
                        <span aria-hidden="true" class="das-rating__icon-star@(Model.Provider.TotalFeedbackRating < 3 ? "--empty" : "")"></span>
                        <span aria-hidden="true" class="das-rating__icon-star@(Model.Provider.TotalFeedbackRating < 4 ? "--empty" : "")"></span>
                    </span>
                    <span class="govuk-!-font-weight-bold das-rating__label--@(Model.Provider.TotalFeedbackRating > 2 ? "good" : "poor")">@Model.Provider.TotalFeedbackText.GetDescription()</span>
                }

                @if (Model.Provider.TotalFeedbackRating == 0)
                {
                    <span class="govuk-!-font-weight-bold das-rating__label--@(Model.Provider.TotalFeedbackRating > 2 ? "good" : "poor")">@Model.Provider.TotalFeedbackRatingTextProviderDetail</span>
                }
                else
                {
                    <span class="govuk-body">@Model.Provider.TotalFeedbackRatingTextProviderDetail</span>
                }
            </p>
            @if (Model.Provider.TotalFeedbackRating != 0)
            {
                <details class="govuk-details" data-module="govuk-details">
                    <summary class="govuk-details__summary">
                        <span class="govuk-details__summary-text govuk-!-font-size">
                            View more details
                        </span>
                    </summary>
                    <div class="govuk-details__text">
                        <div class="das-graph govuk-!-width-three-quarters">
                            <ul class="das-graph__list">
                                @foreach (var feedbackDetail in Model.Provider.FeedbackDetail.OrderByDescending(c => (int)c.Rating))
                                {
                                    <li class="das-graph__list-item">
                                        <h3 class="das-graph__label">@feedbackDetail.Rating.GetDescription()</h3>
                                        <span class="das-graph__chart">
                                            <span class="das-graph__bar">
                                                <span class="das-graph__bar-value das-graph__bar-value--@(feedbackDetail.Rating.ToString().ToLower())" style="width: @(feedbackDetail.RatingPercentage)%"></span>
                                            </span>
                                        </span>
                                        <p class="das-graph__figure">@feedbackDetail.RatingText <span class="govuk-visually-hidden">out of @Model.Provider.TotalEmployerResponses were given rating of @feedbackDetail.Rating.GetDescription()</span></p>
                                    </li>
                                }
                            </ul>
                            @if (Model.Provider.FeedbackStrengths.Any())
                            {
                                <h2 class="govuk-heading-s govuk-!-margin-top-6 govuk-!-margin-bottom-2">Strengths</h2>
                                <ol class="govuk-list govuk-list--number govuk-!-margin-bottom-0">
                                    @foreach (var strength in Model.Provider.FeedbackStrengths)
                                    {
                                        <li>@strength</li>
                                    }
                                </ol>
                            }
                            @if (Model.Provider.FeedbackWeaknesses.Any())
                            {
                                <h2 class="govuk-heading-s govuk-!-margin-top-4 govuk-!-margin-bottom-2">Things to improve</h2>
                                <ol class="govuk-list govuk-list--number govuk-!-margin-bottom-0">
                                    @foreach (var weakness in Model.Provider.FeedbackWeaknesses)
                                    {
                                        <li>@weakness</li>
                                    }
                                </ol>
                            }
                        </div>
                    </div>
                </details>
            }
            <div class="das-highlight govuk-!-margin-bottom-5">
                <span class="govuk-caption-l">Apprenticeship training course</span>
                <h2 class="govuk-heading-l govuk-!-margin-bottom-3">@Model.Course.Title <span class="das-no-wrap">(level @Model.Course.Level)</span></h2>
                <p class="govuk-body govuk-!-margin-bottom-5">
                    <a class="govuk-link govuk-link--no-visited-state" asp-route="@RouteNames.CourseDetails" asp-route-id="@Model.Course.Id">Overview of @Model.Course.TitleAndLevel</a>
                </p>
                @if (!string.IsNullOrEmpty(Model.Provider.OverallAchievementRatePercentage))
                {
                    <p class="govuk-body govuk-!-margin-bottom-1"><span class=" govuk-!-font-weight-bold">@Model.Provider.OverallAchievementRatePercentage pass rate</span> (out of @Model.Provider.OverallCohort apprentices)</p>
                    <p class="govuk-body"><span>@Model.Provider.NationalOverallAchievementRatePercentage national average pass rate</span></p>
                
                    <details class="govuk-details" data-module="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text govuk-!-font-size">
                                Explain pass rate
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            Percentage of apprentices who successfully passed a similar apprenticeship with this training provider in the last academic year.
                        </div>
                    </details>
                }



                @if (!string.IsNullOrEmpty(Model.Location))
                {
                    <h2 class="govuk-heading-m govuk-!-margin-bottom-2 govuk-!-margin-top-4">Apprenticeship location</h2>
                    <p class="govuk-body govuk-!-margin-bottom-">
                        <span style="margin-right: 10px">@Model.Location</span>
                        @{
                            var routeData = new Dictionary<string, string>
                                                                {
                                {"location","-1"},
                                {"id",Model.Course.Id.ToString()},
                                {"providerId",Model.Provider.ProviderId.ToString()}
                            };
                        }
                        <a asp-all-route-data="@routeData" asp-route="@RouteNames.CourseProviderDetails" class="govuk-link govuk-link--no-visited-state">Remove&nbsp;location</a>
                    </p>

                }


                @if (Model.Provider.DeliveryModes.Any())
                {

                    if (Model.Provider.DeliveryModes.FirstOrDefault(c => c.DeliveryModeType == DeliveryModeType.NotFound) != null)
                    {
                        <p class="govuk-body das-text--error das-text--error-icon">This training provider does not offer this course at the apprenticeship location</p>

                        if (Model.TotalProviders == 1)
                        {
                            <p class="govuk-body">There is one training provider for @Model.Course.TitleAndLevel in the apprenticeship location.</p>
                        }
                        else
                        {
                            <p class="govuk-body">There are @Model.TotalProviders training providers for @Model.Course.TitleAndLevel in the apprenticeship location.</p>
                        }
                        <form method="GET" asp-route="@RouteNames.CourseProviders" asp-route-id="@Model.Course.Id" class="govuk-!-width-three-quarters">
                            <button class="govuk-button govuk-!-margin-bottom-0" id="btn-view-providers">
                                View other training providers
                            </button>
                        </form>
                    }
                    else
                    {

                        <h2 class="govuk-heading-m govuk-!-margin-bottom-3 govuk-!-margin-top-4">@Model.Provider.Nameâ€™s training options</h2>

                        if (!string.IsNullOrEmpty(Model.Provider.ProviderAddress))
                        {
                            <h3 class="govuk-heading-s govuk-!-margin-bottom-1">
                                @Model.Provider.ProviderDistanceText
                            </h3>
                            <p class="govuk-body">@Model.Provider.ProviderAddress</p>
                        }

                        <ul class="govuk-list das-icon-list das-icon-list--large govuk-!-margin-top-1 govuk-!-margin-bottom-0">
                            @foreach (var mode in Model.Provider.DeliveryModes)
                            {
                                <li class="das-icon-list__list-item">
                                    @if (mode.IsAvailable)
                                    {
                                        <span class="das-icon-list__icon das-icon-list__icon--tick">available</span>
                                    }
                                    else
                                    {
                                        <span class="das-icon-list__icon das-icon-list__icon--cross">not available</span>
                                    }
                                    @mode.DeliveryModeType.GetDescription() @(!string.IsNullOrEmpty(Model.Location) ? mode.FormattedDistanceInMiles : "")  @mode.NationalText
                                </li>
                            }
                        </ul>

                        if (!string.IsNullOrEmpty(Model.Location))
                        {
                            var dayRelease = Model.Provider.DeliveryModes.SingleOrDefault(c => c.DeliveryModeType == DeliveryModeType.DayRelease);
                            var blockRelease = Model.Provider.DeliveryModes.SingleOrDefault(c => c.DeliveryModeType == DeliveryModeType.BlockRelease);

                            if (dayRelease != null && blockRelease != null && dayRelease.AddressFormatted == blockRelease.AddressFormatted && !string.IsNullOrEmpty(dayRelease.AddressFormatted))
                            {
                                <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-top-4 govuk-!-margin-bottom-1">Day and block release address</p>
                                <p class="govuk-body govuk-!-margin-bottom-0">@dayRelease.AddressFormatted</p>
                            }
                            else
                            {
                                if (dayRelease != null && !string.IsNullOrEmpty(dayRelease.AddressFormatted))
                                {
                                    <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-top-4 govuk-!-margin-bottom-1">Day release address</p>
                                    <p class="govuk-body govuk-!-margin-bottom-0">@dayRelease.AddressFormatted</p>
                                }
                                if (blockRelease != null && !string.IsNullOrEmpty(blockRelease.AddressFormatted))
                                {
                                    <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-top-4 govuk-!-margin-bottom-1">Block release address</p>
                                    <p class="govuk-body govuk-!-margin-bottom-0">@blockRelease.AddressFormatted</p>
                                }
                            }
                        }
                    }
                }
                @if (string.IsNullOrEmpty(Model.Location))
                {
                    <h2 class="govuk-heading-m govuk-!-margin-bottom-2 govuk-!-margin-top-4">Apprenticeship location</h2>
                    <p class="govuk-body">Check @Model.Provider.Nameâ€™s training options for the apprenticeship location.</p>
                    <form method="GET" class="das-search-form govuk-!-width-two-thirds" sp-route-id="@Model.Course.Id" asp-route-providerId="@Model.Provider.ProviderId" asp-route="@RouteNames.CourseProviderDetails">
                        <div class="search-wrapper govuk-form-group search-wrapper-das search-wrapper-das-small govuk-!-margin-bottom-0">
                            <label for="search-location" class="govuk-label">Enter location</label>
                            <div class="das-search-form__group">
                                <input type="search" id="search-location" name="location" title="Search" class="govuk-input govuk-!-width-three-quarters" data-submit-on-selection="true">
                                <div class="das-search-form__button-wrap">
                                    <button class="govuk-button das-search-form__button" type="submit">Search</button>
                                </div>
                            </div>
                        </div>
                    </form>
                }


            </div>
            <div class="das-highlight govuk-!-margin-bottom-5">
                <h3 class="govuk-heading-m govuk-!-margin-bottom-2">Contact this provider about this course</h3>

                <dl class="govuk-summary-list govuk-!-margin-bottom-0">
                    @if (!string.IsNullOrEmpty(Model.Provider.Email))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Email</dt>
                            <dd class="govuk-summary-list__value"><a class="govuk-link govuk-link--no-visited-state" href="mailto:@Model.Provider.Email">@Model.Provider.Email</a></dd>
                        </div>

                    }
                    @if (!string.IsNullOrEmpty(Model.Provider.Phone))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Telephone</dt>
                            <dd class="govuk-summary-list__value">@Model.Provider.Phone</dd>
                        </div>

                    }
                    @if (!string.IsNullOrEmpty(Model.Provider.Website))
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Website</dt>
                            <dd class="govuk-summary-list__value"><a class="govuk-link govuk-link--no-visited-state" target="_blank" rel="noreferrer noopener" href="@Model.Provider.Website">@Model.Provider.Website</a></dd>
                        </div>

                    }

                </dl>

            </div>
            @if (Model.TotalProviders != 0 && Model.Provider.DeliveryModes.FirstOrDefault(c => c.DeliveryModeType == DeliveryModeType.NotFound) == null)
            {
                <div>
                    <p class="govuk-body">@Model.Provider.Name is 1 of @Model.TotalProviders training providers for @Model.Course.TitleAndLevel in the apprenticeship location.</p>
                    <p><a class="govuk-link govuk-link--no-visited-state" asp-route="@RouteNames.CourseProviders" asp-route-id="@Model.Course.Id">View other training providers</a></p>
                </div>
            }

            @if (Model.AdditionalCourses.Total > 0)
            {
                <details class="govuk-details govuk-!-margin-top-7" data-module="govuk-details">
                    <summary class="govuk-details__summary">
                        <span class="govuk-details__summary-text govuk-!-font-size">
                            @(Model.AdditionalCourses.Total == 1 ?
                            "View the 1 other course offered by this provider" :
                            $"View all {Model.AdditionalCourses.Total} courses offered by this provider")
                        </span>
                    </summary>
                    <div class="govuk-details__text">
                        <p class="govuk-body ">Select a course to view locations, training options and contact details.</p>
                        <table class="govuk-table">
                            <tbody class="govuk-table__body">
                                @foreach (var course in Model.AdditionalCourses.Courses)
                                {
                                    var routeData = new Dictionary<string, string>
                                                                                    {
                                        {"location",Model.Location},
                                        {"id",course.Id.ToString()},
                                        {"providerId",Model.Provider.ProviderId.ToString()}
                                    };
                                    <tr class="govuk-table__row">
                                        <td class="govuk-table__cell">
                                            <a class="govuk-link govuk-link--no-visited-state"
                                               asp-route="@RouteNames.CourseProviderDetails"
                                               asp-all-route-data="@routeData">@course.Title <span class="das-no-wrap">(level @course.Level)</span></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </details>
            }
        </div>
    </div>
</main>