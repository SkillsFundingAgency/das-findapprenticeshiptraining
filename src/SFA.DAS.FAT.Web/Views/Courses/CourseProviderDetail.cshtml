@using SFA.DAS.FAT.Web.Infrastructure
@using SFA.DAS.FAT.Domain.Extensions
@using SFA.DAS.FAT.Web.Models
@using SFA.DAS.FAT.Web.Extensions
@using DeliveryModeType = SFA.DAS.FAT.Web.Models.DeliveryModeType

@section feedbackstyles {
    <link rel="stylesheet" media="screen" href="/css/application-cc.css" no-cdn/>
    <link rel="stylesheet" media="print" href="/css/print-cc.css" no-cdn/>
    <link rel="stylesheet" media="print" href="/css/chart-cc.css" no-cdn/>
}

@model SFA.DAS.FAT.Web.Models.CourseProviderViewModel
@{
    if (Model.Provider == null)
    {
        ViewData["Title"] = "This training provider is currently unavailable for apprenticeship training";
        ViewData["Description"] = "This training provider is currently unavailable for apprenticeship training.";
        ViewData[nameof(BreadCrumbViewModel)] = new BreadCrumbViewModel
        {
            Level = BreadCrumbLevel.Error
        };
    }
    else
    {
        ViewData["Title"] = $"{Model.Provider.Name} - training provider";
        ViewData["Description"] = $"View {Model.Provider.Name}'s available training options, pass rate and contact details for {Model.Course.TitleAndLevel}. You can also check their employer reviews and any other apprenticeship training courses that they offer.";
        ViewData[nameof(BreadCrumbViewModel)] = new BreadCrumbViewModel
        {
            Level = BreadCrumbLevel.CourseProviderDetails,
            CourseId = Model.Course.Id.ToString(),
            CourseDescription = Model.Course.TitleAndLevel,
            ProvidersFilters = Model.GetCourseProvidersRequest,
            Location = Model.Location
        };
    }

    var shortlistRouteData = new Dictionary<string, string>
{
        {"id",Model.Course.Id.ToString()},
        {"providerId",Model.Provider?.ProviderId.ToString()}
    };

    ViewData["ShortlistItemCount"] = Model.ShortlistItemCount;
}

<main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            @if (Model.Provider != null)
            {
                if (!string.IsNullOrEmpty(Model.BannerUpdateMessage))
                {
                    <div class="govuk-notification-banner govuk-!-margin-bottom-7">
                        <div class="govuk-notification-banner__content">
                            <p class="govuk-body">@Model.BannerUpdateMessage</p>
                        </div>
                    </div>
                }

                <span class="govuk-caption-xl">Training provider</span>
                <h1 class="govuk-heading-xl govuk-!-margin-bottom-6">
                    @Model.Provider.Name
                </h1>
                if (!string.IsNullOrEmpty(Model.Provider.TradingName))
                {
                    <p class="govuk-body">
                        <span class="govuk-!-font-weight-bold">Other names:</span><br>@Model.Provider.TradingName
                    </p>
                }

                <h2 class="govuk-heading-m govuk-!-margin-bottom-2">Employer reviews</h2>
                <p class="govuk-body-l govuk-!-margin-bottom-4">
                    @if (Model.Provider.TotalFeedbackRating != 0)
                    {
                        <span class="das-rating das-rating--@(Model.Provider.TotalFeedbackRating > 2 ? "good" : "poor")" role="img" aria-label="Rating: @Model.Provider.TotalFeedbackRating out of 4 stars">
                            <span aria-hidden="true" class="das-rating__icon-star"></span>
                            <span aria-hidden="true" class="das-rating__icon-star@(Model.Provider.TotalFeedbackRating < 2 ? "--empty" : "")"></span>
                            <span aria-hidden="true" class="das-rating__icon-star@(Model.Provider.TotalFeedbackRating < 3 ? "--empty" : "")"></span>
                            <span aria-hidden="true" class="das-rating__icon-star@(Model.Provider.TotalFeedbackRating < 4 ? "--empty" : "")"></span>
                        </span>
                        <span class="govuk-!-font-weight-bold das-rating__label--@(Model.Provider.TotalFeedbackRating > 2 ? "good" : "poor")">@Model.Provider.TotalFeedbackText.GetDescription()</span>
                    }

                    @if (Model.Provider.TotalFeedbackRating == 0)
                    {
                        <span class="govuk-!-font-weight-bold das-rating__label--poor">@Model.Provider.TotalFeedbackRatingTextProviderDetail</span>
                    }
                    else
                    {
                        <span class="govuk-body">@Model.Provider.TotalFeedbackRatingTextProviderDetail</span>
                    }
                </p>


                if (Model.Provider.TotalFeedbackRating != 0)
                {
                    <details class="govuk-details" data-module="govuk-details">
                        <summary class="govuk-details__summary">
                            <span class="govuk-details__summary-text">
                                Employer review details
                            </span>
                        </summary>
                        <div class="govuk-details__text">
                            <div class="govspeak">
                                
                                <div id="feedbackChart" class="mc-chart-container" aria-labelledby="mc-chart-not-accessible-2">
                                    <button onclick="toggleFeedbackChartDiv()" class="govuk-body-s mc-toggle-button"><span class="mc-toggle-text">Change to table and accessible view</span><span class="govuk-visually-hidden mc-toggle-status" role="alert"></span></button>
                                    <div aria-hidden="true" class="js-barchart-table compact mc-auto-outdent mc-chart mc-multiple">
                                        <div class="mc-thead" style="white-space: nowrap;">
                                            <div class="mc-tr">
                                                <div class="mc-th"></div>
                                                <div class="mc-th mc-key-header mc-key-1" style="text-align: left; margin-left:0; border-left-color: #28a197;  padding-top:3px; padding-bottom:3px;">Employers that selected this as a "strength"</div>
                                                <div class="mc-th mc-key-header mc-key-2" style="text-align: left; margin-left:0; margin-bottom:50px; border-left-color: #d53880;  padding-top:3px; padding-bottom:3px;">Employers that selected this as "needs improvement"</div>
                                            </div>
                                        </div>
                                        <div class="mc-tbody">

                                        @foreach (var feedbackItem in Model.Provider.FeedbackAttributeSummary)
                                        {
                                            <hr style="margin-top:0; margin-bottom:0; opacity: 0.5;">
                                            <div class="mc-tr">
                                                <div class="mc-td mc-key-cell">@feedbackItem.AttributeName<span class="govuk-caption-m" style="font-size: 14px;">(selected by @feedbackItem.TotalCount employers)</span></div>
                                                <div class="mc-td mc-bar-cell mc-bar-1 mc-bar-indented" style="width: @feedbackItem.StrengthPerc%; color: black;  margin-bottom:0;  background-color:#28a197; padding-top:3px; padding-bottom:3px;"><span style="color: black; margin-left: 100%;">@feedbackItem.StrengthPerc%</span></div>
                                                <div class="mc-td mc-bar-cell mc-bar-2 mc-bar-indented" style="width: @feedbackItem.WeaknessPerc%;  color: black; margin-bottom:5px;  background-color:#d53880; padding-top:3px; padding-bottom:3px;"><span style="color: black; margin-left: 100%;">@feedbackItem.WeaknessPerc%</span></div>
                                            </div>
                                        }

                                            <hr style="margin-top:0; margin-bottom:0; opacity: 0.5;">

                                        </div>
                                    </div>

                                </div>

                                
                                <div id="feedbackTable" class="mc-chart-container" aria-labelledby="mc-chart-not-accessible-2" style="display:none">
                                    <button onclick="toggleFeedbackTableDiv()" class="govuk-body-s mc-toggle-button"><span class="mc-toggle-text">Change to chart view</span><span class="govuk-visually-hidden mc-toggle-status" role="alert"></span></button>
                                    <table aria-label="Table view of employer feedback" class="js-barchart-table compact mc-auto-outdent js-barchart-table-init">
                                        <thead>
                                            <tr>
                                                <th scope="col">Statement</th>

                                                <th scope="col">Percentage of employers that selected this as a "strength"</th>
                                                <th scope="col">Percentage of employers that selected this as "needs improvement"</th>
                                                <th scope="col">Total number of employers that selected this statement</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var feedbackItem in Model.Provider.FeedbackAttributeSummary)
                                            {
                                            <tr>
                                                <td>@feedbackItem.AttributeName</td>

                                                <td>@feedbackItem.StrengthPerc%</td>
                                                <td>@feedbackItem.WeaknessPerc%</td>
                                                <td>@feedbackItem.TotalCount</td>
                                            </tr>
                                            }
                                        </tbody>
                                    </table>
                                    
                                
                                </div>


                            </div>
                        </div>
                    </details>
                }
                if (!string.IsNullOrEmpty(Model.Provider.MarketingInfo))
                {
                    <div class="govuk-!-margin-bottom-8">
                        <h2 class="govuk-heading-m">Provider overview</h2>
                        <div class="app-user-content">
                            @Html.MarkdownToHtml(Model.Provider.MarketingInfo)
                        </div>
                    </div>
                }

                <div class="das-highlight govuk-!-margin-bottom-5">
                    <span class="govuk-caption-l">Apprenticeship training course</span>
                    <h2 class="govuk-heading-l govuk-!-margin-bottom-3">@Model.Course.Title <span class="das-no-wrap">(level @Model.Course.Level)</span></h2>
                    @if (!string.IsNullOrEmpty(Model.Provider.OverallAchievementRatePercentage))
                    {
                        <p class="govuk-body govuk-!-margin-bottom-1"><span class=" govuk-!-font-weight-bold">@Model.Provider.OverallAchievementRatePercentage pass rate</span> (out of @Model.Provider.OverallCohort apprentices)</p>
                        <p class="govuk-body"><span>@Model.Provider.NationalOverallAchievementRatePercentage national average pass rate</span></p>

                        <details class="govuk-details" data-module="govuk-details">
                            <summary class="govuk-details__summary">
                                <span class="govuk-details__summary-text">
                                    Explain pass rate
                                </span>
                            </summary>
                            <div class="govuk-details__text">
                                The percentage of apprentices who successfully passed a similar apprenticeship with this training provider in the 2018 to 2019 academic year.
                            </div>
                        </details>
                    }



                    @if (!string.IsNullOrEmpty(Model.Location))
                    {
                        <h2 class="govuk-heading-m govuk-!-margin-bottom-2 govuk-!-margin-top-4">Apprenticeship location</h2>
                        <p class="govuk-body">
                            <span class="govuk-!-margin-right-2">@Model.Location</span>
                            @{
                                var routeData = new Dictionary<string, string>
                                                                                                {
                        {"location", "-1"},
                        {"id", Model.Course.Id.ToString()},
                        {"providerId", Model.Provider.ProviderId.ToString()}
                    };
                            }
                            <a asp-all-route-data="@routeData" asp-route="@RouteNames.CourseProviderDetails" class="govuk-link govuk-link--no-visited-state">Remove&nbsp;location</a>
                        </p>

                    }


                    @if (Model.Provider.DeliveryModes.Any())
                    {

                        if (Model.Provider.DeliveryModes.FirstOrDefault(c => c.DeliveryModeType == DeliveryModeType.NotFound) != null)
                        {
                            <p id="course_provider_not_available" class="govuk-body das-text--error das-text--error-icon">This training provider does not offer @Model.Course.TitleAndLevel at the apprenticeship location.</p>

                            if (Model.ProvidersAtLocation > 0)
                            {
                                if (Model.ProvidersAtLocation == 1)
                                {
                                    <p class="govuk-body">There is one training provider for @Model.Course.TitleAndLevel at the apprenticeship location.</p>
                                }
                                else
                                {
                                    <p class="govuk-body">There are @Model.ProvidersAtLocation training providers for @Model.Course.TitleAndLevel at the apprenticeship location.</p>
                                }

                                var routeData = new Dictionary<string, string>
                                                {
                        {"Location", Model.Location},
                        {"id", Model.Course.Id.ToString()},
                    };

                        <form method="GET" asp-route="@RouteNames.CourseProviders" asp-route-id="@Model.Course.Id" class="govuk-!-width-three-quarters">
                            <input type="hidden" name="Location" value="@Model.Location" />
                            <button class="govuk-button govuk-!-margin-bottom-0" id="btn-view-providers">
                                View training provider@((Model.ProvidersAtLocation == 1 ? "" : "s"))
                            </button>
                        </form>
                    }
                    else
                    {
                        <p class="govuk-body">There are no other training providers available for @Model.Course.TitleAndLevel at the apprenticeship location.</p>
                        <p>You can either:</p>
                        <ul class="govuk-list govuk-list--bullet govuk-!-margin-bottom-6">
                            <li><a asp-route="@RouteNames.Courses" class="govuk-link govuk-link--no-visited-state">search for another course</a></li>
                            <li><a href="@Model.HelpFindingCourseUrl" class="govuk-link govuk-link--no-visited-state" id="share-interest">get help with finding a training provider</a></li>
                        </ul>
                        if (Model.TotalProviders > 1)
                        {
                            <p class="govuk-body">@Model.TotalProviders providers available at other locations.</p>
                            <form method="GET" asp-route="@RouteNames.CourseProviders" asp-route-id="@Model.Course.Id" class="govuk-!-width-three-quarters">
                                <input type="hidden" name="Location" value="-1" />
                                <button class="govuk-button govuk-!-margin-bottom-0" id="btn-view-providers">
                                    View all providers for this course
                                </button>
                            </form>
                        }
                    }
                }
                else
                {

                    <h2 class="govuk-heading-m govuk-!-margin-bottom-3 govuk-!-margin-top-4">@Model.Provider.Name’s training options</h2>

                    if (!string.IsNullOrEmpty(Model.Provider.ProviderAddress))
                    {
                        <h3 class="govuk-heading-s govuk-!-margin-bottom-1">
                            @Model.Provider.ProviderDistanceText
                        </h3>
                        <p class="govuk-body">@Model.Provider.ProviderAddress</p>
                    }

                    <ul class="govuk-list das-icon-list das-icon-list--large govuk-!-margin-top-1 govuk-!-margin-bottom-0">
                        @foreach (var mode in Model.Provider.DeliveryModes)
                        {
                            <li class="das-icon-list__list-item">
                                @if (mode.IsAvailable)
                                {
                                    <span class="das-icon-list__icon das-icon-list__icon--tick">available</span>
                                }
                                else
                                {
                                    <span class="das-icon-list__icon das-icon-list__icon--cross">not available</span>
                                }
                                @mode.DeliveryModeType.GetDescription()@(!string.IsNullOrEmpty(Model.Location) ? mode.FormattedDistanceInMiles : "") @mode.NationalText
                            </li>
                        }
                    </ul>

                    if (!string.IsNullOrEmpty(Model.Location))
                    {
                        var dayRelease = Model.Provider.DeliveryModes.SingleOrDefault(c => c.DeliveryModeType == DeliveryModeType.DayRelease);
                        var blockRelease = Model.Provider.DeliveryModes.SingleOrDefault(c => c.DeliveryModeType == DeliveryModeType.BlockRelease);

                        if (dayRelease != null && blockRelease != null && dayRelease.AddressFormatted == blockRelease.AddressFormatted && !string.IsNullOrEmpty(dayRelease.AddressFormatted))
                        {
                            <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-top-4 govuk-!-margin-bottom-1">Day and block release address</p>
                            <p class="govuk-body govuk-!-margin-bottom-0">@dayRelease.AddressFormatted</p>
                        }
                        else
                        {
                            if (dayRelease != null && !string.IsNullOrEmpty(dayRelease.AddressFormatted))
                            {
                                <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-top-4 govuk-!-margin-bottom-1">Day release address</p>
                                <p class="govuk-body govuk-!-margin-bottom-0">@dayRelease.AddressFormatted</p>
                            }
                            if (blockRelease != null && !string.IsNullOrEmpty(blockRelease.AddressFormatted))
                            {
                                <p class="govuk-body govuk-!-font-weight-bold govuk-!-margin-top-4 govuk-!-margin-bottom-1">Block release address</p>
                                <p class="govuk-body govuk-!-margin-bottom-0">@blockRelease.AddressFormatted</p>
                            }
                        }
                    }
                }
            }
                    @if (string.IsNullOrEmpty(Model.Location))
                    {
                        <h2 class="govuk-heading-m govuk-!-margin-bottom-2 govuk-!-margin-top-4">Apprenticeship location</h2>
                        <p class="govuk-body">Check @Model.Provider.Name’s training options for the apprenticeship location.</p>
                        <form method="GET" class="das-search-form govuk-!-width-two-thirds" asp-route-id="@Model.Course.Id" asp-route-providerId="@Model.Provider.ProviderId" asp-route="@RouteNames.CourseProviderDetails">
                            <div class="search-wrapper govuk-form-group search-wrapper-das search-wrapper-das-small govuk-!-margin-bottom-0">
                                <label for="search-location" class="govuk-label">Enter a town, city or postcode</label>
                                <div class="das-search-form__group">
                                    <input type="search" id="search-location" name="location" title="Search" class="govuk-input govuk-!-width-three-quarters" data-submit-on-selection="true">
                                    <div class="das-search-form__button-wrap">
                                        <button class="govuk-button das-search-form__button" type="submit">Search</button>
                                    </div>
                                </div>
                            </div>
                        </form>
                    }


                </div>
                <div class="das-highlight govuk-!-margin-bottom-5">
                    <h3 class="govuk-heading-m govuk-!-margin-bottom-2">Contact this provider about this course</h3>

                    <dl class="govuk-summary-list govuk-!-margin-bottom-0">
                        @if (!string.IsNullOrEmpty(Model.Provider.Email))
                        {
                            <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Email</dt>
                            <dd class="govuk-summary-list__value"><a class="govuk-link govuk-link--no-visited-state" href="mailto:@Model.Provider.Email">@Model.Provider.Email</a></dd>
                    </div>

                }
                        @if (!string.IsNullOrEmpty(Model.Provider.Phone))
                        {
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">Telephone</dt>
                                <dd class="govuk-summary-list__value">@Model.Provider.Phone</dd>
                            </div>

                        }
                        @if (!string.IsNullOrEmpty(Model.Provider.Website))
                        {
                            <div class="govuk-summary-list__row">
                                <dt class="govuk-summary-list__key">Website</dt>
                                <dd class="govuk-summary-list__value"><a class="govuk-link govuk-link--no-visited-state" target="_blank" rel="noreferrer noopener" href="@Model.Provider.Website">@Model.Provider.Website</a></dd>
                            </div>

                        }

                        </dl>
                    </div>

                    <div class="das-highlight govuk-!-margin-bottom-5">
                        <div class="app-provider-shortlist-control app-provider-shortlist-control--inline @(Model.Provider.ShortlistId == null ? "" : "app-provider-shortlist-added")">
                            <div class="app-provider-shortlist-add">
                                <form method="post" asp-route="@RouteNames.CreateShortlistItem" asp-all-route-data="@shortlistRouteData" class="das-ajax-form">
                                    <input type="hidden" name="routeName" value="@RouteNames.CourseProviderDetails" />
                                    <input type="hidden" name="providerName" value="@Model.Provider.Name" />
                                    <button id="add-to-shortlist-@(Model.Provider.ProviderId)" class="govuk-button govuk-!-margin-bottom-0" type="submit">Add to shortlist</button>
                                </form>
                            </div>
                            <div class="app-provider-shortlist-remove govuk-body govuk-!-margin-bottom-0">
                                <strong class="govuk-tag app-provider-shortlist-tag govuk-!-margin-bottom-2">Shortlisted</strong>
                                <form method="post" asp-route="@RouteNames.DeleteShortlistItem" asp-route-id="@(Model.Provider.ShortlistId ?? Guid.Empty)">
                                    <input type="hidden" name="ukprn" value="@Model.Provider.ProviderId" />
                                    <input type="hidden" name="providerName" value="@Model.Provider.Name" />
                                    <input type="hidden" name="trainingCode" value="@Model.Course.Id" />
                                    <input type="hidden" name="routeName" value="@RouteNames.CourseProviderDetails" />
                                    <button id="remove-from-shortlist-@(Model.Provider.ProviderId)" class="das-button--inline-link" type="submit">Remove from shortlist</button>
                                </form>
                            </div>
                        </div>

                        @if (Model.Provider.DeliveryModes.FirstOrDefault(c => c.DeliveryModeType == DeliveryModeType.NotFound) == null)
                        {
                            if (!string.IsNullOrEmpty(Model.Location))
                            {
                                var routeData = new Dictionary<string, string>
                                            {
                    {"location", Model.Location},
                    {"id", Model.Course.Id.ToString()},
                };
                                if (Model.ProvidersAtLocation > 1)
                                {
                                    <p class="govuk-body govuk-!-margin-top-4">@Model.Provider.Name is 1 of @Model.ProvidersAtLocation training providers for @Model.Course.TitleAndLevel at the apprenticeship location.</p>
                                    <p class="govuk-body govuk-!-margin-bottom-0"><a class="govuk-link govuk-link--no-visited-state" asp-route="@RouteNames.CourseProviders" asp-all-route-data="@routeData">View training providers</a></p>
                                }
                                if (Model.ProvidersAtLocation == 1)
                                {
                                    <p class="govuk-body govuk-!-margin-top-4">@Model.Provider.Name is the only training provider for @Model.Course.TitleAndLevel at the apprenticeship location.</p>
                                }
                            }
                            else
                            {
                                if (Model.TotalProviders > 1)
                                {
                                    <p class="govuk-body govuk-!-margin-top-4">@Model.Provider.Name is 1 of @Model.TotalProviders training providers for @Model.Course.TitleAndLevel.</p>
                                    <p class="govuk-body govuk-!-margin-bottom-0"><a class="govuk-link govuk-link--no-visited-state" asp-route="@RouteNames.CourseProviders" asp-route-id="@Model.Course.Id">View training providers for this course</a></p>
                                }
                                if (Model.TotalProviders == 1)
                                {
                                    <p class="govuk-body govuk-!-margin-top-4">@Model.Provider.Name is the only training provider for @Model.Course.TitleAndLevel.</p>
                                }
                            }

                        }
                    </div>




                    if (Model.AdditionalCourses.Total > 1)
                    {
                        <details class="govuk-details govuk-!-margin-top-7" data-module="govuk-details">
                            <summary class="govuk-details__summary">
                                <span class="govuk-details__summary-text">
                                    View all @Model.AdditionalCourses.Total courses offered by this provider
                                </span>
                            </summary>
                            <div class="govuk-details__text">
                                <p class="govuk-body ">Select a course to view locations, training options and contact details.</p>
                                <table class="govuk-table">
                                    <tbody class="govuk-table__body">
                                        @foreach (var course in Model.AdditionalCourses.Courses)
                                        {
                                            var routeData = new Dictionary<string, string>
                                                                                            {
                                {"location", Model.Location},
                                {"id", course.Id.ToString()},
                                {"providerId", Model.Provider.ProviderId.ToString()}
                            };
                                            <tr class="govuk-table__row">
                                                <td class="govuk-table__cell">
                                                    <a class="govuk-link govuk-link--no-visited-state"
                                                       asp-route="@RouteNames.CourseProviderDetails"
                                                       asp-all-route-data="@routeData">@course.Title <span class="das-no-wrap">(level @course.Level)</span></a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </details>
                    }
                }
                else
                {
                    <h1 class="govuk-heading-xl">This training provider is currently unavailable for apprenticeship training</h1>
                    <a class="govuk-button" asp-route="@RouteNames.Courses">View apprenticeship training courses</a>
                }

        </div>
        </div>
    </main>